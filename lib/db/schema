/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Associatedemailclientcategory = "CATEGORY_PERSONAL" | "CATEGORY_PROMOTIONS" | "CATEGORY_SOCIAL" | "CATEGORY_UPDATES";

export type CleanupAction = "ARCHIVE" | "DELETE" | "NOTHING";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type SubscriptionStatus = "ACTIVE" | "CANCELLED" | "PAST_DUE" | "UNPAID";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface _PrismaMigrations {
  applied_steps_count: Generated<number>;
  checksum: string;
  finished_at: Timestamp | null;
  id: string;
  logs: string | null;
  migration_name: string;
  rolled_back_at: Timestamp | null;
  started_at: Generated<Timestamp>;
}

export interface AutoCleanupSetting {
  after_days_old: Generated<number>;
  category: string;
  cleanup_action: Generated<CleanupAction>;
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  is_disabled: Generated<boolean>;
  updated_at: Generated<Timestamp>;
  user_id: number;
}

export interface CustomEmailRule {
  associated_email_client_category: Associatedemailclientcategory | null;
  category: string;
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  prompt_content: string;
  updated_at: Generated<Timestamp>;
  user_id: number;
}

export interface DefaultEmailRuleOverride {
  associated_email_client_category: Associatedemailclientcategory | null;
  category: string;
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  is_disabled: Generated<boolean>;
  updated_at: Generated<Timestamp>;
  user_id: number;
}

export interface EmailTraining {
  ai_answer: string;
  body: string;
  confidence: number;
  email_id: string;
  from: string;
  heuristics_used: Generated<boolean>;
  id: Generated<number>;
  subject: string;
  user_email: string;
}

export interface ProcessedDailySummary {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  user_id: number;
}

export interface ProcessedEmail {
  ai_answer: string;
  category: string;
  id: string;
  labels_applied: Generated<string[] | null>;
  labels_removed: Generated<string[] | null>;
  processed_at: Generated<Timestamp>;
  user_id: number;
}

export interface User {
  created_at: Generated<Timestamp>;
  email: string;
  id: Generated<number>;
  last_payment_attempt_at: Timestamp | null;
  last_successful_payment_at: Timestamp | null;
  setup_completed: Generated<boolean>;
  subscription_status: Generated<SubscriptionStatus>;
  updated_at: Generated<Timestamp>;
}

export interface UserAccountAccess {
  access_token: string;
  created_at: Generated<Timestamp>;
  expires_at: Timestamp;
  id: Generated<number>;
  needs_reauthentication: Generated<boolean>;
  refresh_token: string;
  updated_at: Generated<Timestamp>;
  user_email: string;
}

export interface UserTokenUsageStat {
  created_at: Generated<Timestamp>;
  date: Generated<Timestamp>;
  id: Generated<number>;
  month: Generated<number>;
  tokens_consumed: Generated<Int8>;
  updated_at: Generated<Timestamp>;
  user_email: string;
  year: Generated<number>;
}

export interface DB {
  _prisma_migrations: _PrismaMigrations;
  auto_cleanup_setting: AutoCleanupSetting;
  custom_email_rule: CustomEmailRule;
  default_email_rule_override: DefaultEmailRuleOverride;
  email_training: EmailTraining;
  processed_daily_summary: ProcessedDailySummary;
  processed_email: ProcessedEmail;
  user: User;
  user_account_access: UserAccountAccess;
  user_token_usage_stat: UserTokenUsageStat;
}
